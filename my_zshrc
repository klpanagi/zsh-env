source ${HOME}/.antigen/antigen.zsh

# Load the oh-my-zsh's library.
antigen use oh-my-zsh

## Bundles {
  antigen bundle command-not-found
  antigen bundle z
  antigen bundle git
  antigen bundle colorize
  antigen bundle pip
  antigen bundle cp
  #antigen bundle emoji
  antigen bundle colored-man-pages
  antigen bundle zsh-users/zsh-syntax-highlighting
  antigen bundle zsh-users/zsh-completions
  antigen bundle zsh-users/zsh-history-substring-search
  antigen bundle zsh-users/zsh-autosuggestions
  antigen bundle ssh-agent
# }

## Theme {
  antigen theme https://github.com/caiogondim/bullet-train-oh-my-zsh-theme bullet-train
  #antigen theme russjohnson/angry-fly-zsh angry-fly
  #antigen theme denysdovhan/spaceship-zsh-theme spaceship
  #antigen bundle yardnsm/blox-zsh-theme
  #antigen theme InAnimaTe/darkblood-modular darkblood-modular
  #antigen theme oskarkrawczyk/honukai-iterm-zsh honukai
  #antigen theme tonyseek/oh-my-zsh-seeker-theme seeker

#}

# Tell antigen that you're done.
antigen apply

## zsh-history-substring-search {

  ## OPTION 1: for most systems
  zmodload zsh/terminfo
  bindkey "$terminfo[kcuu1]" history-substring-search-up
  bindkey "$terminfo[kcud1]" history-substring-search-down
  ## OPTION 1: for Ubuntu 12.04, Fedora 21, and MacOSX 10.9
  bindkey '^[[A' history-substring-search-up
  bindkey '^[[B' history-substring-search-down
  ## VI mode
  bindkey -M vicmd 'k' history-substring-search-up
  bindkey -M vicmd 'j' history-substring-search-down]]]]

# }

export EDITOR="vim"
export BROWSER="chromium"

## Compiler
export CC=/usr/bin/gcc
export CXX=/usr/bin/g++

# Locale
export LANG=en_US.UTF-8

export TERM="screen-256color"
export TERMINAL="terminator"

# If not tmux session
[[ $TMUX = "" ]] && export TERM="rxvt-unicode"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
#DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
HIST_STAMPS="mm/dd/yyyy"

if [ -d "$HOME/.local/bin" ]; then
  PATH="$HOME/.local/bin:$PATH"
fi


export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/local/lib/pkgconfig:/usr/lib/pkgconfig


# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='vim'
fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

### Bullet-Train ###
####################
# Prompt
BULLETTRAIN_PROMPT_ROOT=true
BULLETTRAIN_PROMPT_CHAR="âž”"
BULLETTRAIN_PROMPT_SEPARATE_LINE=true
BULLETTRAIN_PROMPT_ADD_NEWLINE=true

# Time
BULLETTRAIN_TIME_SHOW=false

# Status
BULLETTRAIN_STATUS_SHOW=true
BULLETTRAIN_STATUS_EXIT_SHOW=true
BULLETTRAIN_STATUS_BG="green"
BULLETTRAIN_STATUS_ERROR_BG="red"
BULLETTRAIN_STATUS_FG="black"

# Context
BULLETTRAIN_IS_SSH_CLIENT=true
BULLETTRAIN_CONTEXT_BG="black"
BULLETTRAIN_CONTEXT_FG="yellow"
BULLETTRAIN_CONTEXT_DEFAULT_USER="klpanagi"

# Dir
BULLETTRAIN_DIR_SHOW=true
BULLETTRAIN_DIR_BG="black"
BULLETTRAIN_DIR_FG="yellow"
BULLETTRAIN_DIR_CONTEXT_SHOW=false
BULLETTRAIN_DIR_EXTENDED=1

# Git
BULLETTRAIN_GIT_SHOW=true
BULLETTRAIN_GIT_BG="black"
BULLETTRAIN_GIT_FG="white"
BULLETTRAIN_GIT_COLORIZE_DIRTY=true
BULLETTRAIN_GIT_COLORIZE_DIRTY_BG_COLOR="black"
BULLETTRAIN_GIT_COLORIZE_DIRTY_FG_COLOR="cyan"

# Command execution
BULLETTRAIN_EXEC_TIME_SHOW=true
BULLETTRAIN_EXEC_TIME_BG="magenta"
BULLETTRAIN_EXEC_TIME_FG="white"
BULLETTRAIN_EXEC_TIME_ELAPSED=2

# Python virtualenv
BULLETTRAIN_VIRTUALENV_SHOW=true
BULLETTRAIN_VIRTUALENV_BG="yellow"
BULLETTRAIN_VIRTUALENV_FG="black"
BULLETTRAIN_VIRTUALENV_PREFIX="[pyenv]"


### TMUX ###
############
ZSH_TMUX_AUTOSTART=false
ZSH_TMUX_AUTOCONNECT=true
ZSH_TMUX_FIXTERM_WITH_256COLOR=true

### Aliases ###
###############
alias gits='git status'
alias gitf='git fetch'
alias gita='git add -A'
alias gitc='git clone'


# ROS
if [ -d "/opt/ros/indigo" ]; then
  source /opt/ros/indigo/setup.zsh --extend
fi

# RAPP-Platform
if [ -d "${HOME}/rapp_platform" ]; then
  echo "RAPP Platform located in system"
  source ${HOME}/rapp_platform/rapp_platform_setup.zsh
fi

# vim-mode
#bindkey -v

## Python VirtualEnv
export WORKON_HOME=$HOME/.virtualenvs
source /usr/bin/virtualenvwrapper.sh
export PYTHONPATH=$PYTHONPATH:${HOME}/Desktop/Diploma-Thesis/ai-playground/deep-learning/lib

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
